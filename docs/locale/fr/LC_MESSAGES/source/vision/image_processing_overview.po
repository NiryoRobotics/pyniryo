# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Niryo All rights reserved. No part of this document
# may be reproduced or transmitted in any form or by any means without prior
# written consent of Niryo SAS
# This file is distributed under the same license as the PyNiryo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: PyNiryo 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-29 14:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/vision/image_processing_overview.rst:2
msgid "Overview & examples"
msgstr "Vue d'ensemble et exemples"

#: ../../source/vision/image_processing_overview.rst:4
msgid ""
"This file illustrates few image processing pipeline using vision module "
"from niryo_edu package. This module is based in `OpenCV "
"<https://opencv.org/>`_ and its functions are detailed in :doc:`Functions"
" documentation <image_processing_api>`."
msgstr ""
"Ce document illustre quelques pipelines de traitement d'image utilisation"
" de module de vision du package niryo_edu. Ce module est basé sur `OpenCV"
" <https://opencv.org/>`_ et ses fonctions sont détaillées dans "
":doc:`Documentation des fonctions <image_processing_api>`."

#: ../../source/vision/image_processing_overview.rst:9
msgid ""
"The package niryo_edu comes up with the **vision** module which contains "
"image processing functions including thresholding, blob detection, ..."
msgstr ""
"Le package niryo_edu est fourni avec un module **vision** qui contient "
"des fonctions de traitement d'images incluant du seuillage, la détection "
"de zones d'intérêt (blobs), ..."

#: ../../source/vision/image_processing_overview.rst:10
msgid "To use it, add to your imports ``from pyniryo.vision import *``."
msgstr ""
"Afin de l'utiliser, ajoutez à vous importations ``from pyniryo.vision "
"import *``."

#: ../../source/vision/image_processing_overview.rst:13
msgid ""
"It is also possible to merge both import lines by using ``from pyniryo "
"import *``."
msgstr ""
"Il est également possible de fusionner les lignes des deux importations "
"en utilisant ``from pyniryo import *``"

#: ../../source/vision/image_processing_overview.rst:16
msgid "Play with Robot video stream"
msgstr "Interagir avec le flux vidéo du robot"

#: ../../source/vision/image_processing_overview.rst:18
msgid ""
"We are firstly going to take a look at robot's functions which can be "
"find at :ref:`API - Vision<source/api_doc/api:Vision>`"
msgstr ""
"Nous allons commencer par étudier les fonctions du robot qui peuvent être"
" trouvées dans :ref:`API - Vision<source/api_doc/api:Vision>`."

#: ../../source/vision/image_processing_overview.rst:22
msgid "Get & display image from stream"
msgstr "Obtenir et afficher une image depuis le flux"

#: ../../source/vision/image_processing_overview.rst:23
msgid ""
"Ned can share its video stream through TCP. As sending raw images will "
"lead to heavy packets which can saturate the network, it sends compressed"
" images. You access it through the robot's function: "
":meth:`~.api.tcp_client.NiryoRobot.get_img_compressed`. Once your image "
"is received, you firstly need to uncompress via "
":func:`~.vision.image_functions.uncompress_image` and you can then "
"display it with :func:`~.vision.image_functions.show_img_and_wait_close`."
" ::"
msgstr ""
"Ned peut partager son flux vidéo par le biais de TCP. Envoyer des images "
"brutes est à l'origine de lourds paquets qui peuvent faire saturer le "
"réseau, alors il envoie  des images compressées. Vous pouvez y accéder "
"depuis la fonction du robot suivante : "
":meth:`~.api.tcp_client.NiryoRobot.get_img_compressed`. Une fois l'image "
"reçue, vous aurez besoin de la décompresser avec "
":func:`~.vision.image_functions.uncompress_image`. Vous pouvez désormais "
"l'afficher avec la fonction "
":func:`~.vision.image_functions.show_img_and_wait_close`. ::"

#: ../../source/vision/image_processing_overview.rst:45
msgid ""
":func:`~.vision.image_functions.show_img_and_wait_close` will wait for "
"the user to press either *Q* or *Esc* key, before closing the window."
msgstr ""
"La fonction :func:`~.vision.image_functions.show_img_and_wait_close` "
"attendra que l'utilisateur appuie sur la touche *Q* ou *Esc* avant de "
"fermer la fenêtre."

#: ../../source/vision/image_processing_overview.rst:49
msgid "Undistort and display video stream"
msgstr "Rectifier la déformation et afficher le flux vidéo"

#: ../../source/vision/image_processing_overview.rst:50
msgid ""
"In this section, we are going to display the raw video stream & the "
"undistorted video stream."
msgstr ""
"Dans cette section, nous afficherons le flux vidéo brut ainsi que le flux"
" vidéo non distordu."

#: ../../source/vision/image_processing_overview.rst:53
msgid ""
"As Ned's camera is passing raw images to the robot, these images are "
"distorted due to the camera lens. In order to undistort them, we need to "
"use Ned's camera intrinsics."
msgstr ""
"Puisque la caméra du Set Vision envoie à Ned des images brutes, ces "
"images sont déformées à cause de la lentille de la caméra. Afin de "
"rectifier leur déformation, nous avons besoin d'utiliser les paramètres "
"intrinsèques de la caméra de Ned."

#: ../../source/vision/image_processing_overview.rst:57
msgid ""
"To undistort the raw image, we use "
":func:`~.vision.image_functions.undistort_image` which need to be called "
"with the parameters given by Ned through "
":meth:`~.api.tcp_client.NiryoRobot.get_camera_intrinsics`."
msgstr ""
"Afin de rectifier la déformation de l'image brute, nous utilisons la "
"fonction :func:`~.vision.image_functions.undistort_image` qui doit être "
"appelée avec les paramètres donnés à Ned par "
":meth:`~.api.tcp_client.NiryoRobot.get_camera_intrinsics`."

#: ../../source/vision/image_processing_overview.rst:61
msgid ""
"Once, we have both raw & undistorted images, we can concatenate them in "
"order to display them in once with "
":func:`~.vision.image_functions.concat_imgs`. Finally, we display the "
"image :func:`~.vision.image_functions.show_img`. ::"
msgstr ""
"Une fois que vous avez l'image brute et l'image non distordue, on peut "
"les concaténer afin de les afficher en une fois avec "
":func:`~.vision.image_functions.concat_imgs`. Enfin, on affiiche l'image "
":func:`~.vision.image_functions.show_img`. ::"

#: ../../source/vision/image_processing_overview.rst:98
msgid ""
"To see more about camera distortion/undistortion, go on `OpenCV "
"Documentation about Camera Calibration "
"<https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html>`_."
msgstr ""
"Pour en découvrir davantage à propos de la distortion / correction de "
"distortion, rendez vous sur `la documentation OpenCV à propos de la "
"calibration de la caméra "
"<https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html>`_."

#: ../../source/vision/image_processing_overview.rst:102
msgid "Pure image processing functions"
msgstr "Fonctions de traitement d'images simple"

#: ../../source/vision/image_processing_overview.rst:105
msgid "See the curriculum on image processing for more theoretical information."
msgstr ""
"Consultez notre TP sur le traitement d'images pour des informations plus "
"théoriques."

#: ../../source/vision/image_processing_overview.rst:108
msgid "In order to illustrate functions, we are going to use the following image."
msgstr "Afin d'illuster les fonctions, nous allons utiliser l'image suivante."

msgid "Image illustration"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:117
msgid "In this section it is supposed that:"
msgstr "Dans cette section, il est supposé que :"

#: ../../source/vision/image_processing_overview.rst:119
msgid "You have imported ``pyniryo.vision``"
msgstr "Vous avez importé ``pyniryo.vision``"

#: ../../source/vision/image_processing_overview.rst:120
msgid ""
"The variable ``img`` is containing the image on which image processing is"
" applied"
msgstr ""
"La variable ``img`` contient l'image sur laquelle le traitement d'images "
"est appliqué"

#: ../../source/vision/image_processing_overview.rst:125
msgid "Color thresholding"
msgstr "Seuillage de couleurs"

#: ../../source/vision/image_processing_overview.rst:127
msgid ""
"Color thresholding is very useful in order to detect object with an "
"uniform color. The implemented function to realize this operation is "
":func:`~.vision.image_functions.threshold_hsv`."
msgstr ""
"Le seuillage de couleurs est très utile pour détecter un objet avec une "
"couleur uniforme. La fonction implémentée pour réaliser cette opération "
"est :func:`~.vision.image_functions.threshold_hsv`."

#: ../../source/vision/image_processing_overview.rst:132
msgid ""
"The following code is using parameters from "
":class:`~.vision.enums.ColorHSV` enum in order to threshold Red features "
"& *hand made* parameters to extract Blue: ::"
msgstr ""
"Le code suivant utilise les paramètres de l'enum "
":class:`~.vision.enums.ColorHSV` afin de seuiller les éléments rouges "
"ainsi que des paramètres réalisés à la main pour extraire la couleur "
"bleue. ::"

#: ../../source/vision/image_processing_overview.rst:148
#: ../../source/vision/image_processing_overview.rst:195
#: ../../source/vision/image_processing_overview.rst:239
#: ../../source/vision/image_processing_overview.rst:269
#: ../../source/vision/image_processing_overview.rst:295
#: ../../source/vision/image_processing_overview.rst:324
msgid "Images result"
msgstr "Images obtenues"

#: ../../source/vision/image_processing_overview.rst:153
msgid "Thresh color"
msgstr "Couleur seuillée"

#: ../../source/vision/image_processing_overview.rst:154
#: ../../source/vision/image_processing_overview.rst:201
msgid "Image result"
msgstr "Images obtenues"

#: ../../source/vision/image_processing_overview.rst:155
msgid "Blue"
msgstr "Bleu"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Threshold Blue"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:158
msgid "Red"
msgstr "Rouge"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Threshold Red"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:163
msgid "Morphological transformations"
msgstr "Transformations morphologiques"

#: ../../source/vision/image_processing_overview.rst:165
msgid ""
"Morphological transformations are some simple operations based on the "
"image shape. It is normally performed on binary images. It needs two "
"inputs, one is our original image, second one is called structuring "
"element or kernel which decides the nature of operation. Two basic "
"morphological operators are `Erosion "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Erosion>`_ and "
"`Dilation "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Dilation>`_."
msgstr ""
"Les transformations morphologiques sont des opérations simples basées sur"
" la forme de l'image. Elles sont normalement réalisée sur des images "
"binaires. Elles nécessitent deux entrées, l'une est notre image "
"originale, l'autre est appelée élément structurant ou noyau et décide de "
"la nature de l'opération. Les deux opérateurs morphologiques communs sont"
" `l'érosion "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Erosion>`_ et la "
"`dilatation "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Dilation>`_."

#: ../../source/vision/image_processing_overview.rst:170
msgid ""
"Then its variant forms like `Opening "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Opening>`_, "
"`Closing "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Closing>`_ also "
"comes into play. Learn more on `Wikipedia page "
"<https://en.wikipedia.org/wiki/Mathematical_morphology>`_."
msgstr ""
"Ensuite ses variantes comme `l'ouverture "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Opening>`_, la "
"`fermeture "
"<https://en.wikipedia.org/wiki/Mathematical_morphology#Closing>`_ sont "
"sont également à prendre en compte. Apprenez-en plus sur la `page "
"Wikipédia <https://fr.wikipedia.org/wiki/Morphologie_mathématique>`_."

#: ../../source/vision/image_processing_overview.rst:176
msgid ""
"The implemented function to realize these operations is "
":func:`~.vision.image_functions.morphological_transformations`. It uses "
":class:`~.vision.enums.MorphoType` and :class:`~.vision.enums.KernelType`"
" to determine which operation should be applied on the image."
msgstr ""
"Afin de réaliser ses opérations, la fonction implémentée est "
":func:`~.vision.image_functions.morphological_transformations`. Elle "
"utilise :class:`~.vision.enums.MorphoType` et "
":class:`~.vision.enums.KernelType` afin de déterminer quelle opération "
"doit être appliquée à l'image. "

#: ../../source/vision/image_processing_overview.rst:181
msgid "The code shows how to do a Closing & an Erosion: ::"
msgstr "Le code montre comment réaliser une fermeture et une érosion : ::"

#: ../../source/vision/image_processing_overview.rst:200
msgid "Morpho type"
msgstr "Morphotype"

#: ../../source/vision/image_processing_overview.rst:202
msgid "None"
msgstr "Aucun"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Threshold Any"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:205
msgid "Erode"
msgstr "Érodé"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Erode"
msgstr "Images obtenues"

#: ../../source/vision/image_processing_overview.rst:208
msgid "Close"
msgstr "Fermé"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Close"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:214
msgid "Contours finder"
msgstr "Détection de contours"

#: ../../source/vision/image_processing_overview.rst:215
msgid ""
"Contours can be explained simply as a curve joining all the continuous "
"points (along the boundary), having same color or intensity. The contours"
" are a useful tool for shape analysis and object detection and "
"recognition. See more on `OpenCV Documentation "
"<https://docs.opencv.org/3.4/d3/d05/tutorial_py_table_of_contents_contours.html>`_."
msgstr ""
"Les contours peuvent être expliqués par une courbe reliant tous les "
"points ayant la même couleur ou intensité. La détection de contours est "
"un outil utile pour l'analyse de formes et la détection et reconnaissance"
" d'objets. Apprenez en plus sur la `Documentation OpenCV "
"<https://docs.opencv.org/3.4/d3/d05/tutorial_py_table_of_contents_contours.html>`_."

#: ../../source/vision/image_processing_overview.rst:221
msgid ""
"The implemented function to realize these operations is "
":func:`~.vision.image_functions.biggest_contours_finder` which takes a "
"Black & White image, and extract the biggest (in term of area) contours "
"from it."
msgstr ""
"Afin de réaliser ces opérations, la fonction implémentée est "
":func:`~.vision.image_functions.biggest_contours_finder` qui prend une "
"image en noir et blanc et en extrait le plus grand (en terme de surface) "
"contour."

#: ../../source/vision/image_processing_overview.rst:225
msgid ""
"The code to extract and draw the 3 biggest contours from an image is the "
"following: ::"
msgstr ""
"Le code permettant d'extraire et dessiner les 3 plus grands contours "
"d'une image sont les suivants : ::"

#: ../../source/vision/image_processing_overview.rst:243
#: ../../source/vision/image_processing_overview.rst:273
msgid "Thresh + Opening"
msgstr "Seuil + ouverture"

#: ../../source/vision/image_processing_overview.rst
msgid "Image Threshold Any & Open"
msgstr ""

#: ../../source/vision/image_processing_overview.rst
#: ../../source/vision/image_processing_overview.rst:246
msgid "3 contours"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:251
msgid "Find object center position"
msgstr "Trouve le centre l'objet"

#: ../../source/vision/image_processing_overview.rst:252
msgid ""
"In order to catch an object, we need to find a pose from where the end "
"effector can grasp the object. The following method uses contours which "
"have been found in the previous section and finds their barycenter and "
"orientation via the functions "
":func:`~.vision.image_functions.get_contour_barycenter` & "
":func:`~.vision.image_functions.get_contour_angle`. ::"
msgstr ""
"Afin d'attraper un objet, nous avons besoin de trouver une position "
"depuis laquelle l'effecteur peut saisir l'objet. La méthode qui suit "
"utilise les contours qui ont été trouvés dans la section précedente et "
"trouve ainsi leur barycentre et leur orientation via les fonctions "
":func:`~.vision.image_functions.get_contour_barycenter` & "
":func:`~.vision.image_functions.get_contour_angle`. ::"

#: ../../source/vision/image_processing_overview.rst
#: ../../source/vision/image_processing_overview.rst:276
msgid "Barycenter + Angle"
msgstr "Barycentre + Angle"

#: ../../source/vision/image_processing_overview.rst:281
msgid ""
"The drawn vector is normal to the contour's length because we want Ned to"
" catch the object by the width rather than the length. Indeed, it leads "
"to least cases where the gripper cannot open enough."
msgstr ""
"Le vecteur dessiné est normal à la longueur du contour, car nous voulons "
"que Ned attrape l'objet dans sa largeur plutôt que dans sa longueur. En "
"effet, cela permet de réduire le nombre de cas dans lequel le gripper ne "
"peut pas s'ouvrir de manière suffisante."

#: ../../source/vision/image_processing_overview.rst:286
msgid "Markers extraction"
msgstr "Extraction des marqueurs"

#: ../../source/vision/image_processing_overview.rst:287
msgid ""
"As image processing happens in a workspace, it is important to extract "
"the workspace beforehand! To do so, you can use the function "
":func:`~.vision.image_functions.extract_img_workspace`. ::"
msgstr ""
"Puisque le traitement d'images à lieu dans un espace de travail, il est "
"important d'extraire cet espace de travail avant tout ! Pour cela, vous "
"pouvez utiliser la fonction "
":func:`~.vision.image_functions.extract_img_workspace`. ::"

#: ../../source/vision/image_processing_overview.rst:299
#: ../../source/vision/image_processing_overview.rst:328
msgid "Original"
msgstr ""

#: ../../source/vision/image_processing_overview.rst
msgid "Original Image"
msgstr ""

#: ../../source/vision/image_processing_overview.rst:302
msgid "Extracted"
msgstr "Extraite"

#: ../../source/vision/image_processing_overview.rst
msgid "Extracted Image"
msgstr "Extraite"

#: ../../source/vision/image_processing_overview.rst:308
msgid "Debug mode"
msgstr "Mode debogage"

#: ../../source/vision/image_processing_overview.rst:309
msgid ""
"If Ned's functions are failing, you can use Debug functions which are "
":func:`~.vision.image_functions.debug_threshold_color` & "
":func:`~.vision.image_functions.debug_markers` in order to display what "
"the robot sees."
msgstr ""
"Si les fonctions de Ned échouent, vous pouvez utiliser les fonctions de "
"debogage qui sont :func:`~.vision.image_functions.debug_threshold_color` "
"& :func:`~.vision.image_functions.debug_markers`, afin d'afficher sur "
"l'écran ce que le robot voit."

#: ../../source/vision/image_processing_overview.rst:314
msgid "You can use the functions as follow: ::"
msgstr "Vous pouvez utiliser les fonctions qui suivent : ::"

#: ../../source/vision/image_processing_overview.rst:331
msgid "Debug red"
msgstr "Debogage rouge"

#: ../../source/vision/image_processing_overview.rst
msgid "Debug Red Image"
msgstr "Debogage rouge"

#: ../../source/vision/image_processing_overview.rst:335
msgid "Debug Markers"
msgstr "Debogage marqueurs"

#: ../../source/vision/image_processing_overview.rst
msgid "Debug Markers Image"
msgstr "Debogage marqueurs"

#: ../../source/vision/image_processing_overview.rst:343
msgid "Do your own image processing!"
msgstr "Créer votre propre traitement d'images !"

#: ../../source/vision/image_processing_overview.rst:345
msgid ""
"Now that you are a master in image processing, let's look at full "
"examples."
msgstr ""
"Maintenant que vous êtes un professionnel en traitement d'images, "
"regardons des exemples complets."

#: ../../source/vision/image_processing_overview.rst:349
msgid "Display video stream with extracted workspace"
msgstr "Affiche le flux vidéo avec le workspace extrait"

#: ../../source/vision/image_processing_overview.rst:350
msgid ""
"In the current state, the following code will display the video stream "
"and the extracted workspace image. You can add your own image processing "
"functions maybe to apply additional process. ::"
msgstr ""
"Dans l'état actuel, le code suivant affichera le flux vidéo et extraira "
"l'image de l'espace de travail. Vous pouvez ajouter vos propres fonctions"
" de traitement d'images afin d'appliquer des process additionnels. ::"

#: ../../source/vision/image_processing_overview.rst:399
msgid "Vision pick via your image processing pipeline"
msgstr "Saisie par la vision avec votre pipeline de traitement d'images."

#: ../../source/vision/image_processing_overview.rst:401
msgid ""
"You may want to send coordinate to Ned in order to pick the object of "
"your choice! To do that, use the function "
":func:`~.vision.image_functions.get_target_pose_from_rel` which converts "
"a relative pose in the workspace into a pose in the robot's world! ::"
msgstr ""
"Si vous souhaitez envoyer des coordonnées à Ned afin qu'il saisisse "
"l'objet de votre choix, utilisez la fonction "
":func:`~.vision.image_functions.get_target_pose_from_rel`, qui convertit "
"une position relative sur le workspace en une position dans "
"l'environnement du robot ! ::"

#~ msgid "Image Result"
#~ msgstr "Image obtenue"

#~ msgid "3 Contours"
#~ msgstr ""

#~ msgid ""
#~ "To see more about camera "
#~ "distortion/undistortion, go on "
#~ "|opencv_camera_calib|_."
#~ msgstr ""
#~ "Pour en apprendre davantage sur la "
#~ "distortion / non distortion de la "
#~ "caméra, consultez |opencv_camera_calib|_."

#~ msgid ""
#~ "To see more about camera "
#~ "distortion/undistortion, go on `OpenCV "
#~ "Documentation about Camera Calibration "
#~ "<https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html>`."
#~ msgstr ""

