stages:
  - build
  - deploy
  - release


default:
  image: $CI_REGISTRY_IMAGE:latest
  cache:
    paths:
      - .cache/pip
  before_script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt -r docs/requirements.txt


build_docker:
  stage: .pre
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [ "" ]
  # override default before_script
  before_script: []
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/.docker/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  only:
    changes:
      - .docker/Dockerfile


build_package:
  stage: build
  script:
    - python3 -m pip install --upgrade build
    - python3 -m build

  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true" && '$CI_COMMIT_BRANCH == master'
  artifacts:
    paths:
      - dist


pages:
  stage: deploy
  script:
    - git fetch --tags --force
    - git checkout $CI_COMMIT_REF_NAME
    - scripts/build_docs_versioned.py public $CI_COMMIT_REF_NAME $(git tag)
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  variables:
    GIT_STRATEGY: "clone"


upload_package:
  stage: release
  script:
    - pip install --upgrade twine
    - twine upload -u $PYPI_ACCOUNT -p $PYPI_PASSWORD --repository-url $PYPI_PROJECT_NAME dist/*
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true" && $CI_COMMIT_BRANCH == "master"
  when: manual
  variables:
    PYPI_PROJECT_NAME: https://upload.pypi.org/legacy/


mirror_github:
  stage: release
  dependencies: [ ]
  variables:
    GIT_STRATEGY: clone
  script:
    - eval $(ssh-agent)
    - chmod 600 $GITHUB_SSH_KEY
    - ssh-add $GITHUB_SSH_KEY
    - git remote add github https://github.com/NiryoRobotics/pyniryo.git
    - git push --follow-tags github $CI_COMMIT_BRANCH
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true" && '$CI_COMMIT_BRANCH == master'
