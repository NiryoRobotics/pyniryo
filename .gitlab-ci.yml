image: gitlab01.niryotech.com:5050/documentations/build_docs/pyniryo:v1.2.0_amd64

variables:

  ########### Part that needs to be overwrite for each documentation ###########

  # Documentation name
  DOCUMENTATION_NAME: pyniryo

  DOCUMENTATION_OUTPUT_FOLDER: "output_build"

  BASE_GITLAB_CI_RESSOURCE_URL: "https://gitlab01.niryotech.com/pipelines/gitlab-ci-jobs/-/raw/master/"

  ##############################################################################

  PYPI_PROJECT_NAME: pyniryo

  # Allow to pull the directory containing front-end files
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: fetch
  GIT_DEPTH: 0

stages:
  - build
  - test
  - upload
  - environment_test
  - release_gitlab

include:
  # Build documentation
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/build_documentation/build_documentation_config.yml'
  # Check for missing translations or fuzzy
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/missing_translations/missing_translations_config.yml'
  # Upload documentation to niryo.com ftp
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/upload_to_ftp/upload_to_ftp_config.yml'
  # Check for broken links in website
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'documentation/link_checker/link_checker_config.yml'
  # Create Gitlab release (tag + release)
  - project: 'pipelines/gitlab-ci-jobs'
    ref: master
    file: 'various/release_gitlab/release_gitlab_config.yml'
  ## See https://docs.gitlab.com/ee/user/project/merge_requests/code_quality.html
  - template: Code-Quality.gitlab-ci.yml

build_doc_job:
  script:
    # Build documentation without todo printing in final document
    - docs/scripts/build_docs.sh -D todo_include_todos=0 -o ${DOCUMENTATION_OUTPUT_FOLDER}
    - docs/scripts/generate_pdf.sh -o ${DOCUMENTATION_OUTPUT_FOLDER}/generated_pdfs
    - mv docs/${DOCUMENTATION_OUTPUT_FOLDER} ${DOCUMENTATION_OUTPUT_FOLDER}

code_quality:
  tags:
    - dind
  artifacts:
    paths: [gl-code-quality-report.json]

code_quality_html:
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: [gl-code-quality-report.html]
##

missing_translation_job:
  stage: test
  variables:
    LOCALE_FOLDER_PATH: ./docs/locale
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

.staging_job:
  variables: &staging_variables
    DOMAIN_NAME: https://staging.docs.niryo.com
    BASE_FOLDER_DOC_URL: https://staging.docs.niryo.com/dev
    TARGET_FOLDER_OVH: ~/docs_staging/dev

upload_staging_job:
  stage: upload
  environment:
    name: staging
    deployment_tier: staging
    action: start
  tags:
    - staging
  variables:
    CI_COMMIT_TAG: v0.0.1
    <<: *staging_variables
  rules:
    - if: $CI_COMMIT_BRANCH
      when: manual
      allow_failure: true
  extends: .abstract_upload

linkchecker_staging_job:
  stage: environment_test
  variables:
    <<: *staging_variables
  rules:
    - if: $CI_COMMIT_BRANCH
  needs:
    - upload_staging_job
  extends: .abstract_linkchecker

.production_job:
  variables: &production_variables
    DOMAIN_NAME: https://docs.niryo.com
    BASE_FOLDER_DOC_URL: https://docs.niryo.com/dev
    TARGET_FOLDER_OVH: ~/docs/dev
  rules: &production_rules
    ## Just in case we would restrict to master (https://stackoverflow.com/a/64448994)
    # If a it's a tag && protected tag
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"

upload_production_job:
  rules: *production_rules
  stage: upload
  environment:
    name: production/documentation
    deployment_tier: production
    action: start
  tags:
    - production
  variables:
    <<: *production_variables
  extends: .abstract_upload

linkchecker_production_job:
  stage: environment_test
  variables:
    <<: *production_variables
  rules: *production_rules
  needs:
    - upload_production_job
  allow_failure: true
  extends: .abstract_linkchecker

upload_pypi_job:
  rules:
    # Just in case we would restrict to master (https://stackoverflow.com/a/64448994)
    # If a it's a tag && protected tag && branch master
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true" && '$CI_COMMIT_BRANCH == master'
  image: python:3.10.0-buster
  stage: upload
  environment:
    name: production/pypi
    deployment_tier: production
  tags:
    - production
  script:
    # Install needed dependencies:
    - python3 -m pip install --upgrade build
    - python3 -m pip install --upgrade twine
    - |
      echo \
      "[distutils]
      index-servers =
        $PYPI_PROJECT_NAME

      [$PYPI_PROJECT_NAME]
      repository=https://upload.pypi.org/legacy/

      username = $PYPI_ACCOUNT
      password = $PYPI_PASSWORD" >> ~/.pypirc
    # Create a dist folder containing pip files
    - python3 -m build;
    # Upload created files to Pypi online
    - python3 -m twine upload --repository $PYPI_PROJECT_NAME dist/*

release_gitlab_job:
  rules: *production_rules
  stage: release_gitlab